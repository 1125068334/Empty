/**
    22-1: 约束
        虽然可以在插入新行时进行检查，但最好不要这样做，原因如下：
            1. 如果在客户端层面上实施数据库完整性规则，则每个客户端都要被迫实施这些规则，一定会有一些客户端不实施这些规则。
            2. 在执行UPDATE和DELETE操作时，也必须实施这些规则
            3. 执行客户端检查是非常耗时的，而DBMS执行这些检查会相对高效。
        约束(constraint): 管理如何插入或处理数据库数据的规则
        DBMS通过在数据库表上施加约束来实施引用完整性。
        22-1-1: 主键
            主键是一种特殊的约束，用来保证一列(或一组列)中的值是唯一的，而且永不改动。
            这方便了直接或交互地处理表中的行。
            满足主键的条件：
                1. 任意两行的主键值都不相同
                2. 每行都具有一个主键值(即列中不允许NULL值)
                3. 包含主键值的列从不修改或更新。
                4. 主键值不能重用。如果从表中删除某一行，其主键值不分配给新行
        22-1-2: 外键
            外键是表中的一列，其值必须列在另一表的主键中。外键是保证引用完整性的极其重要部分。
        22-1-3: 唯一约束
            唯一约束用来保证一列(或一组列)中的数据是唯一的。
            约束和主键的区别:
                1. 表可包含多个唯一约束，但每个表只允许一个主键
                2. 唯一约束列可包含NULL值
                3. 唯一约束列可修改或更新
                4. 唯一约束列的值可重复使用
                5. 与主键不一样，唯一约束不同用来定义外键
            唯一约束既可以用UNIQUE关键字在表定义中定义，也可以用单独的CONSTRAINT定义
        22-1-4: 检查约束
            检查约束用来保证一列(或一组列)中的数据满足一组指定的条件。
            检查约束的常见用途:
                1. 检查最小或最大值。
                2. 指定范围
                3. 只允许特定的值
 */

 alter table vendors add constraint primary key(vend_id);

-- check
create table orderitems
(
    order_num integer not null,
    order_item integer not null,
    prod_id char(10) not null,
    quantity integer not null check ( quantity > 10 ),
    item_price decimal(8,2) not null
)